services:
  kafka:
    image: apache/kafka:latest
    hostname: kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - messaging
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  redpanda-console:
    image: redpandadata/console:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: "kafka:9092"
    networks:
      - messaging
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 120s
    depends_on:
      - kafka

  seq:
    image: datalust/seq:latest
    hostname: seq
    environment:
      ACCEPT_EULA: Y
      SEQ_FIRSTRUN_ADMINUSERNAME: admin
      SEQ_FIRSTRUN_ADMINPASSWORD: Abc123456789
      #SEQ_FIRSTRUN_ADMINPASSWORDHASH: QK2yndMtWoWzaKABRfgbAeJdzv1RnLwDoPLiDlcZZwuquxMFdFX20g9I3L7yLK2fu9YWE4i1RMj8QbSyxDGgx/FuhYFQqKbva2MMnZEOrsCT
      #SEQ_API_CANONICALURI: "http://seq:80"
    ports:
      - "80:80"
    networks:
      - messaging
    volumes:
      - seq-data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  producer:
    image: registry:5000/messaging-producer:latest
    environment:
      - DOTNET_ENVIRONMENT=Production
      - KafkaOptions__HostName=kafka
      - KafkaOptions__Port=9092
      # Seq logging configuration
      - Serilog__WriteTo__2__Name=Seq
      - Serilog__WriteTo__2__Args__serverUrl=http://seq:80
      - Serilog__WriteTo__2__Args__apiKey=
    networks:
      - messaging
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    depends_on:
      - kafka
      - seq

  consumer:
    image: registry:5000/messaging-consumer:latest
    environment:
      - DOTNET_ENVIRONMENT=Production
      - KafkaOptions__HostName=kafka
      - KafkaOptions__Port=9092
      - ConsumerGroup=my-consumer-group
      # Seq logging configuration
      - Serilog__WriteTo__2__Name=Seq
      - Serilog__WriteTo__2__Args__serverUrl=http://seq:80
      - Serilog__WriteTo__2__Args__apiKey=
    networks:
      - messaging
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    depends_on:
      - kafka
      - seq

networks:
  messaging:
    external: true
    name: messaging

volumes:
  kafka-data:
  seq-data: